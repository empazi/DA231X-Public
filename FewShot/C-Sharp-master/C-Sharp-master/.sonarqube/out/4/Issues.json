{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25210.5 (fe188fa9)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/programmering/mex/DA231X/FewShot/C-Sharp-master/C-Sharp-master/Algorithms/Graph/MinimumSpanningTree/Kruskal.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 22,
                  "endLine": 158,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/programmering/mex/DA231X/FewShot/C-Sharp-master/C-Sharp-master/Algorithms/Graph/MinimumSpanningTree/Kruskal.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 76,
                  "endLine": 158,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2368",
          "level": "warning",
          "message": "Make this method private or simplify its parameters to not use multidimensional/jagged arrays.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/programmering/mex/DA231X/FewShot/C-Sharp-master/C-Sharp-master/Algorithms/Graph/MinimumSpanningTree/Kruskal.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 28,
                  "endLine": 27,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S2368": {
          "id": "S2368",
          "shortDescription": "Public methods should not have multidimensional array parameters",
          "fullDescription": "Using multidimensional and jagged arrays as method parameters in C# can be challenging for developers.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2368",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}